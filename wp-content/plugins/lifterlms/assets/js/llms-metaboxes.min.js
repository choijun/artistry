!function(p){p.fn.llmsCollapsible=function(){return this.on("click",".llms-collapsible-header",function(){var e=p(this).closest(".llms-collapsible"),t=e.siblings(".llms-collapsible");e.toggleClass("opened"),e.find(".llms-collapsible-body").slideToggle(400),t.each(function(){p(this).removeClass("opened"),p(this).find(".llms-collapsible-body").slideUp(400)})}),this},window.llms=window.llms||{};window.llms.metaboxes=new function(){this.repeaters={metaboxes:this,$repeaters:null,init:function(){var e=this;e.$repeaters=p(".llms-mb-list.repeater"),e.$repeaters.length&&(LLMS.wait_for(function(){return"undefined"!=typeof tinyMCE},function(){e.load(),e.bind()}),p('#post input[type="submit"]').on("click",function(){p(this).attr("data-llms-clicked","yes")}),p("#post").on("submit",e.handle_submit))},bind:function(){var l=this;l.$repeaters.each(function(){var a=p(this),n=a.find(".llms-repeater-rows"),e=a.find(".llms-repeater-model");tinyMCE.EditorManager.execCommand("mceRemoveEditor",!0,e.find(".llms-mb-list.editor textarea").attr("id")),a.find(".llms-repeater-new-btn").on("click",function(){l.add_row(a,null,!0)}),n.sortable({handle:".llms-drag-handle",items:".llms-repeater-row",start:function(e,t){n.addClass("dragging")},stop:function(e,t){n.removeClass("dragging"),t.item.find("textarea.wp-editor-area").each(function(){var e=p(this).attr("id");tinyMCE.EditorManager.execCommand("mceRemoveEditor",!0,e),tinyMCE.EditorManager.execCommand("mceAddEditor",!0,e)}),l.save(a)}}),a.on("click",".llms-repeater-remove",function(e){e.stopPropagation();var t=p(this).closest(".llms-repeater-row");window.confirm(LLMS.l10n.translate("Are you sure you want to delete this row? This cannot be undone."))&&(t.remove(),setTimeout(function(){l.save(a)},1))})})},add_row:function(e,t,a){var n=this,l=e.find(".llms-repeater-rows"),i=e.find(".llms-repeater-model").find(".llms-repeater-row").clone(),s=e.find(".llms-repeater-row").length,r=n.reindex(i,s);t&&p.each(t,function(e,t){var a=i.find('[name^="'+e+'"]');a.hasClass("llms-select2-student")?(p.each(t,function(e,t){a.append('<option value="'+t.key+'" selected="selected">'+t.title+"</option>")}),a.trigger("change")):a.val(t)}),setTimeout(function(){n.bind_row(i)},1),l.append(i),a&&i.find(".llms-collapsible-header").trigger("click"),tinyMCE.EditorManager.execCommand("mceAddEditor",!0,r),e.trigger("llms-new-repeater-row",{$row:i,data:t})},bind_row:function(e){this.bind_row_header(e),e.find(".llms-select2").llmsSelect2({width:"100%"}),e.find(".llms-select2-student").llmsStudentsSelect2(),this.metaboxes.bind_datepickers(e.find(".llms-datepicker")),this.metaboxes.bind_controllers(e.find("[data-is-controller]"))},bind_row_header:function(e){var t=e.find(".llms-repeater-title"),a=e.find(".llms-collapsible-header-title-field");t.attr("data-default",t.text()),a.on("keyup focusout blur",function(){var e=p(this).val();e||(e=t.attr("data-default")),t.text(e)}).trigger("keyup")},handle_submit:function(e){e.preventDefault();var t=p('#post [data-llms-clicked="yes"]'),a=t.parent().find(".spinner");p('#post input[type="submit"]').addClass("disabled"),a.addClass("is-active");var n,l=window.llms.metaboxes.repeaters,i=0;l.$repeaters.each(function(){l.save(p(this))}),n=setInterval(function(){59<=i||!p(".llms-mb-list.repeater.processing").length?(clearInterval(n),p("#post").off("submit",this.handle_submit),a.removeClass("is-active"),t.removeClass("disabled").trigger("click")):i++},1e3)},load:function(){var n=this;n.$repeaters.each(function(){var a=p(this);a.hasClass("is-loaded")||a.hasClass("processing")||n.store(a,"load",function(e){a.addClass("is-loaded"),p.each(e.data,function(e,t){n.add_row(a,t,!1)}),a.find(".llms-repeater-rows .llms-repeater-row").each(function(){n.bind_row(p(this))})})})},reindex:function(e,a){var n=e.attr("data-row-order"),t=e.find(".llms-mb-list.editor textarea");function l(e,t){e.each(function(){var e=p(this).attr(t);p(this).attr(t,e.replace(n,a))})}return tinyMCE.EditorManager.execCommand("mceRemoveEditor",!0,t.attr("id")),e.attr("data-row-order",a),l(e,"data-row-order"),l(e.find("button.insert-media"),"data-editor"),l(e.find('input[name^="_llms"], textarea[name^="_llms"], select[name^="_llms"]'),"id"),l(e.find('input[name^="_llms"], textarea[name^="_llms"], select[name^="_llms"]'),"name"),l(e.find("[data-controller]"),"data-controller"),l(e.find("[data-controller]"),"data-controller"),l(e.find("button.wp-switch-editor"),"data-wp-editor-id"),l(e.find("button.wp-switch-editor"),"id"),l(e.find(".wp-editor-tools"),"id"),l(e.find(".wp-editor-container"),"id"),t.attr("id")},save:function(e){e.trigger("llms-repeater-before-save",{$el:e}),this.store(e,"save")},serialize:function(e){var a=[];return e.find(".llms-repeater-rows .llms-repeater-row").each(function(){var t={};p(this).find('input[name^="_llms"], select[name^="_llms"]').each(function(){t[p(this).attr("name")]=p(this).val()}),p(this).find('textarea[name^="_llms"]').each(function(){var e=p(this).attr("name");tinyMCE.editors[e]?t[e]=tinyMCE.editors[e].getContent():t[e]=p(this).val()}),a.push(t)}),a},store:function(t,e,a){a=a||function(){};var n={action:t.find(".llms-repeater-field-handler").val(),store_action:e};"save"===e&&(n.rows=this.serialize(t)),LLMS.Ajax.call({data:n,beforeSend:function(){t.addClass("processing"),LLMS.Spinner.start(t)},success:function(e){a(e),LLMS.Spinner.stop(t),t.removeClass("processing")}})}},this.repeaters.init(),this.init=function(){var n=this;p(".llms-select2-post").each(function(){n.post_select(p(this))}),p(".llms-collapsible-group").llmsCollapsible(),this.bind_tabs();var e=[{selector:p(".llms-datepicker"),func:"bind_datepickers"},{selector:p(".llms-select2"),func:function(e){e.llmsSelect2({width:"100%"})}},{selector:p(".llms-select2-student"),func:function(e){e.llmsStudentsSelect2()}},{selector:p('input[type="checkbox"][data-controls]'),func:"bind_cb_controllers"},{selector:p("[data-is-controller]"),func:"bind_controllers"},{selector:p(".llms-table"),func:"bind_tables"},{selector:p(".llms-merge-code-wrapper"),func:"bind_merge_code_buttons"},{selector:p("a.llms-editable"),func:"bind_editables"}];if(p.each(e,function(e,t){if(t.selector.length){var a=t.selector.filter(function(){return 0===p(this).closest(".llms-repeater-model").length});"string"==typeof t.func?n[t.func](a):"function"==typeof t.func&&t.func(a)}}),window.llms.post.post_type){var t="bind_"+window.llms.post.post_type;"function"==typeof this[t]&&this[t]()}},this.bind_cb_controllers=function(e){(e=e||p('input[type="checkbox"][data-controls]')).each(function(){var e=p(this),t=p(e.attr("data-controls")).closest(".llms-mb-list");e.on("change",function(){p(this).is(":checked")?t.slideDown(200):t.slideUp(200)}),e.trigger("change")})},this.bind_controllers=function(e){(e=e||p("[data-is-controller]")).each(function(){var a,e=p(this),t=p('[data-controller="#'+e.attr("id")+'"]');e.on("change",function(){a="checkbox"===e.attr("type")?e.is(":checked")?e.val():"false":e.val(),t.each(function(){var e=p(this).attr("data-controller-value"),t=[];-1!==e.indexOf(",")?t=e.split(","):t.push(e),-1!==t.indexOf(a)?p(this).slideDown(200):p(this).slideUp(200)})}),e.trigger("change")})},this.bind_datepicker=function(e){var t=e.attr("data-format")||"mm/dd/yy",a=e.attr("data-max-date")||null,n=e.attr("data-min-date")||null;e.datepicker({dateFormat:t,maxDate:a,minDate:n})},this.bind_datepickers=function(e){var t=this;(e=e||p(".llms-datepicker")).each(function(){t.bind_datepicker(p(this))})},this.bind_editables=function(){var f=this;p("a.llms-editable").on("click",function(e){e.preventDefault();var t,a=p(this);t=a.attr("data-fields")?p(a.attr("data-fields")):a.closest(".llms-metabox-section").find("[data-llms-editable]"),a.remove(),t.each(function(){!function(e){var t,a=e.find("label").clone(),n=e.attr("data-llms-editable"),l=e.attr("data-llms-editable-type"),i=e.attr("data-llms-editable-required")||"no",s=e.attr("data-llms-editable-value");if(i="yes"===i?' required="required"':"","select"===l){var r,o=JSON.parse(e.attr("data-llms-editable-options"));for(var d in t=p('<select name="'+n+'"'+i+" />"),o)r=s===d?' selected="selected"':"",t.append('<option value="'+d+'"'+r+">"+o[d]+"</option>")}else if("datetime"===l){t=p('<div class="llms-datetime-field" />'),s=JSON.parse(s);var c=e.attr("data-llms-editable-date-format")||"",m=e.attr("data-llms-editable-date-min")||"",u=e.attr("data-llms-editable-date-max")||"";$picker=p('<input class="llms-date-input llms-datepicker" data-format="'+c+'" data-max-date="'+u+'" data-min-date="'+m+'" name="'+n+'[date]" type="text" value="'+s.date+'">'),f.bind_datepicker($picker),t.append($picker),t.append("<em>@</em>"),t.append('<input class="llms-time-input" max="23" min="0" name="'+n+'[hour]" type="number" value="'+s.hour+'">'),t.append("<em>:</em>"),t.append('<input class="llms-time-input" max="59" min="0" name="'+n+'[minute]" type="number" value="'+s.minute+'">')}else t=p('<input name="'+n+'" type="'+l+'" value="'+s+'"'+i+">");e.empty().append(a).append(t)}(p(this))})})},this.bind_llms_engagement=function(){var l=this;p("#_llms_engagement_type").on("change",function(){p("#_llms_engagement").trigger("llms-engagement-type-change",p(this).val())}),p("#_llms_engagement").on("llms-engagement-type-change",function(e,t){var a=p(this);switch(t){case"achievement":case"certificate":case"email":var n="llms_"+t;a.val(null).attr("data-post-type",n).trigger("change"),l.post_select(a);break;default:a.trigger("llms-engagement-type-change-external",t)}})},this.bind_llms_membership=function(){p('a[href="#llms-course-remove"]').on("click",function(e){e.preventDefault();var t=p(this),a=t.closest("tr"),n=t.closest(".llms-mb-list");LLMS.Spinner.start(n),window.LLMS.Ajax.call({data:{action:"membership_remove_auto_enroll_course",course_id:t.attr("data-id")},beforeSend:function(){n.find("p.error").remove()},success:function(e){e.success?(a.fadeOut(200),setTimeout(function(){a.remove()},400)):n.prepend('<p class="error">'+e.message+"</p>"),LLMS.Spinner.stop(n)}})}),p('a[href="#llms-course-bulk-enroll"]').on("click",function(e){e.preventDefault();var t=p(this),a=(t.closest("tr"),t.closest(".llms-mb-list"));window.confirm(LLMS.l10n.translate("membership_bulk_enrollment_warning"))&&(LLMS.Spinner.start(a),window.LLMS.Ajax.call({data:{action:"bulk_enroll_membership_into_course",course_id:t.attr("data-id")},beforeSend:function(){a.find("p.error").remove()},success:function(e){e.success?t.replaceWith('<strong style="float:right;">'+e.data.message+"&nbsp;&nbsp;</strong>"):a.prepend('<p class="error">'+e.message+"</p>"),LLMS.Spinner.stop(a)}}))})},this.bind_llms_order=function(){p('button[name="llms-refund-toggle"]').on("click",function(){var e=p(this),t=e.closest("tr"),a=t.attr("data-transaction-id"),n=e.attr("data-refundable"),l="1"===e.attr("data-gateway-supports"),i=e.attr("data-gateway"),s=p("#llms-txn-refund-model .llms-txn-refund-form").clone(),r=s.find(".gateway-btn");"remove"!==e.attr("data-action")?(e.text(LLMS.l10n.translate("Cancel")),e.attr("data-action","remove"),s.find("input").removeAttr("disabled"),s.find('input[name="llms_refund_amount"]').attr("max",n),s.find('input[name="llms_refund_txn_id"]').val(a),l&&(r.find(".llms-gateway-title").text(i),r.show()),t.after(s)):(e.text(LLMS.l10n.translate("Refund")),e.attr("data-action",""),t.next("tr").remove())}),p('button[name="llms-manual-txn-toggle"]').on("click",function(){var e=p(this),t=e.closest("tr"),a=p("#llms-manual-txn-model .llms-manual-txn-form").clone();"remove"!==e.attr("data-action")?(e.text(LLMS.l10n.translate("Cancel")),e.attr("data-action","remove"),a.find("input").removeAttr("disabled"),t.after(a)):(e.text(LLMS.l10n.translate("Record a Manual Payment")),e.attr("data-action",""),t.next("tr").remove())}),p(".llms-metabox").one("focus",'.llms-metabox-field[data-llms-editable="payment_gateway"] select',function(){p(this).attr("data-original-value")||p(this).attr("data-original-value",p(this).val())}),p(".llms-metabox").on("change",'.llms-metabox-field[data-llms-editable="payment_gateway"] select',function(){var e=p(this),t=e.val(),a=JSON.parse(e.closest(".llms-metabox-field").attr("data-gateway-fields"))[t];for(var n in a){var l=p('input[name="'+a[n].name+'"]'),i=l.closest(".llms-metabox-field");l.attr("value",""),a[n].enabled?(i.show(),l.attr("required","required"),t===e.attr("data-original-value")&&l.val(i.attr("data-llms-editable-value"))):(l.removeAttr("required"),i.hide())}})},this.bind_merge_code_buttons=function(e){(e=e||p(".llms-merge-code-wrapper")).find(".llms-merge-code-button").on("click",function(){p(this).next(".llms-merge-codes").toggleClass("active")}),e.find(".llms-merge-codes li").on("click",function(){var e=p(this),t=e.closest(".llms-merge-codes"),a=t.attr("data-target"),n=e.attr("data-code");if(-1===a.indexOf("#")){var l=window.tinymce.editors[a];l?l.insertContent(n):alert(LLMS.l10n.translate("Copy this code and paste it into the desired area")+": "+n)}else p(a).val(p(a).val()+n);t.removeClass("active")})},this.bind_tabs=function(){p(".llms-nav-tab-wrapper .tabs li").on("click",function(){var e=p(this),t=e.closest(".llms-mb-container"),a=e.attr("data-tab");e.siblings().removeClass("llms-active"),t.find(".tab-content").removeClass("llms-active"),e.addClass("llms-active"),p("#"+a).addClass("llms-active")})},this.post_select=function(e){var t=e.attr("data-post-type")||post,a=e.attr("data-post-type")||!1;e.llmsSelect2({allowClear:a,ajax:{dataType:"JSON",delay:250,method:"POST",url:window.ajaxurl,data:function(e){return{action:"select2_query_posts",page:e.page?e.page-1:0,post_type:t,term:e.term,_ajax_nonce:wp_ajax_data.nonce}},processResults:function(e,t){return{results:function t(e){return Array.isArray(e)?p.map(e,function(e){return{text:(t=e).name,id:t.id};var t}):p.map(e,function(e){return{text:e.label,children:t(e.items)}})}(e.items),pagination:{more:e.more}}}},cache:!0,width:"80%"});var n=LLMS.l10n.translate("View"),l=p('<a class="llms-button-secondary small" style="margin-left:5px;" target="_blank" href="#">'+n+' <i class="fa fa-external-link" aria-hidden="true"></i></a>');e.next(".select2").after(l),e.on("change",function(){var e=p(this).val();e?l.attr("href","/?p="+e).show():l.hide()}).trigger("change")},this.bind_tables=function(){p('.llms-table button[name="llms-expand-table"]').on("click",function(){var e=p(this),t=e.closest(".llms-table");if(e.attr("data-text")){var a=e.text();e.text(e.attr("data-text")),e.attr("data-text",a)}t.find(".expandable").each(function(){p(this).hasClass("closed")?p(this).addClass("opened").removeClass("closed"):p(this).addClass("closed").removeClass("opened")})})},this.init()}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
